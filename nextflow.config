manifest {
    author            = 'Trevor F. Freeman'
    defaultBranch     = 'main'
    recurseSubmodules = true
    description       = 'A pipeline for analyzing repeat elements. Built on SRAlign.'
    mainScript        = 'main.nf'
    name              = 't-f-freeman/SRepeAt'
    nextflowVersion   = '>=21.04'
    version           = 'v1.0.3'
}

params {
    /*
    Resources
    */
    maxCpus   = 16
    maxMemory = '24.GB'
    maxTime   = '24.h'

    dummyFile = "${projectDir}/bin/dummy.txt"
    seed      = 40

    /*
    I/O
    */

    // Input
    baseDirGenome = "${PWD}/data/references"

    // Output
    baseDirReport = "${PWD}/results/reports"
    baseDirData   = "${PWD}/results/data"

    // Full MultiQC
    multiqcConfig = "$projectDir/configs/full_multiqc_config.yaml"

    contaminant = 'EB1'

    help = null

    /*
    All reads QC
    */
    skipReadsQC = false
    skipDedicatedReadsMultiQC = false

    /*
    Raw reads QC
    */
    skipRawFastQC = false

    /*
    Trim reads and QC
    */
    trimTool = 'fastp'

    // Read-trimming control flow
    skipTrimReads   = false
    skipTrimFastQC = false
    
    adapterR1 = ''
    adapterR2 = ''

    /*
    Align
    */
    alignmentTool = 'hisat2'
    numberPrimaryAlignments = 50

    // Alignment control flow
    forceAlignRawReads    = false
    skipAlignGenome       = false
    forceUseHisat2Index   = true
    buildSpliceAwareIndex = true

    // Alignment stats
    skipSamStatsQC = false
    
    // Check contamination
    skipAlignContam = false

    // preseq
    skipPreseq = true

    // telescope
    skipTelescope = true
}


profiles {
    docker {
        docker.enabled = true
    }
    google {
        process.executor = 'google-lifesciences'
        workDir          = 'gs://esctffno/scratch'
        google.location  = 'us-central1'
        google.region    = 'us-central1'
        google.project   = 'no-chr'
    }
    test {
        docker.enabled     = true
        params.input       = "https://github.com/trev-f/test-SRAlign/raw/main/inputs/RNA-seq_Celegans_wt-N2_design.csv"
        params.genome      = 'testce10'
        params.contaminant = 'testEB1'
    }
    testBam {
        docker.enabled     = true
        params.input       = "${projectDir}/test/data/inputs/ATAC_PE_design_bam.csv"
        params.genome      = 'testWBcel235'
        params.contaminant = 'testEB1'
    }
    dryRun {
        params.skipRawFastQC   = true
        params.skipTrimReads   = true
        params.skipTrimReadsQC = true
        params.skipAlignGenome = true
        params.skipSamStatsQC  = true
        params.skipAlignContam = true
        params.skipPreseq      = true
    }
}


/*
    Include other config files
*/

// Load genomes config file
includeConfig 'configs/genomes.config'

// Load modules config file
includeConfig 'configs/modules.config'

// Load resources config file
includeConfig 'configs/resources.config'


/*
    Reporting
*/

timestamp = new java.util.Date().format('yyyy-MM-dd_HH-mm')

dag {
    enabled = true
    file    = "${params.baseDirReport}/tracing/${timestamp}_dag.html"
}

report {
    enabled = true
    file    = "${params.baseDirReport}/tracing/${timestamp}_report.html"
}


timeline{
    enabled = true
    file    = "${params.baseDirReport}/tracing/${timestamp}_timeline.html"
}


trace {
    enabled = true
    file    = "${params.baseDirReport}/tracing/${timestamp}_trace.html"
}
